<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" ignored="0" total="7" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="90569" started-at="2022-09-21T12:31:46Z" finished-at="2022-09-21T12:33:16Z">
    <groups>
      <group name="Purchase">
        <method signature="SubmitOrderTest.submitOrder(java.util.HashMap)[pri:0, instance:apoorvrastogitraining.tests.SubmitOrderTest@7c16905e]" name="submitOrder" class="apoorvrastogitraining.tests.SubmitOrderTest"/>
      </group> <!-- Purchase -->
      <group name="ErrorHandling">
        <method signature="ErrorValidationTest.loginErrorValidation()[pri:0, instance:apoorvrastogitraining.tests.ErrorValidationTest@1753acfe]" name="loginErrorValidation" class="apoorvrastogitraining.tests.ErrorValidationTest"/>
      </group> <!-- ErrorHandling -->
    </groups>
    <test name="Surefire test" duration-ms="90569" started-at="2022-09-21T12:31:46Z" finished-at="2022-09-21T12:33:16Z">
      <class name="apoorvrastogitraining.tests.SubmitOrderTest">
        <test-method status="PASS" signature="launchApplication()[pri:0, instance:apoorvrastogitraining.tests.SubmitOrderTest@7c16905e]" name="launchApplication" is-config="true" duration-ms="6320" started-at="2022-09-21T12:32:27Z" finished-at="2022-09-21T12:32:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method status="PASS" signature="submitOrder(java.util.HashMap)[pri:0, instance:apoorvrastogitraining.tests.SubmitOrderTest@7c16905e]" name="submitOrder" duration-ms="7100" started-at="2022-09-21T12:32:33Z" data-provider="getData" finished-at="2022-09-21T12:32:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=India123, product=adidas original, email=rastogiapoorv@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:apoorvrastogitraining.tests.SubmitOrderTest@7c16905e]" name="tearDown" is-config="true" duration-ms="995" started-at="2022-09-21T12:32:40Z" finished-at="2022-09-21T12:32:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="launchApplication()[pri:0, instance:apoorvrastogitraining.tests.SubmitOrderTest@7c16905e]" name="launchApplication" is-config="true" duration-ms="6707" started-at="2022-09-21T12:32:41Z" finished-at="2022-09-21T12:32:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method status="PASS" signature="submitOrder(java.util.HashMap)[pri:0, instance:apoorvrastogitraining.tests.SubmitOrderTest@7c16905e]" name="submitOrder" duration-ms="7352" started-at="2022-09-21T12:32:48Z" data-provider="getData" finished-at="2022-09-21T12:32:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=India123, product=iphone 13 pro, email=rastogiapoorv1@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:apoorvrastogitraining.tests.SubmitOrderTest@7c16905e]" name="tearDown" is-config="true" duration-ms="1175" started-at="2022-09-21T12:32:55Z" finished-at="2022-09-21T12:32:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="launchApplication()[pri:0, instance:apoorvrastogitraining.tests.SubmitOrderTest@7c16905e]" name="launchApplication" is-config="true" duration-ms="6051" started-at="2022-09-21T12:32:57Z" finished-at="2022-09-21T12:33:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method status="PASS" signature="orderHistoryTest(java.util.HashMap)[pri:0, instance:apoorvrastogitraining.tests.SubmitOrderTest@7c16905e]" name="orderHistoryTest" duration-ms="2578" started-at="2022-09-21T12:33:03Z" data-provider="getData" depends-on-methods="apoorvrastogitraining.tests.SubmitOrderTest.submitOrder" finished-at="2022-09-21T12:33:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=India123, product=adidas original, email=rastogiapoorv@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderHistoryTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:apoorvrastogitraining.tests.SubmitOrderTest@7c16905e]" name="tearDown" is-config="true" duration-ms="969" started-at="2022-09-21T12:33:05Z" finished-at="2022-09-21T12:33:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="launchApplication()[pri:0, instance:apoorvrastogitraining.tests.SubmitOrderTest@7c16905e]" name="launchApplication" is-config="true" duration-ms="6233" started-at="2022-09-21T12:33:06Z" finished-at="2022-09-21T12:33:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method status="PASS" signature="orderHistoryTest(java.util.HashMap)[pri:0, instance:apoorvrastogitraining.tests.SubmitOrderTest@7c16905e]" name="orderHistoryTest" duration-ms="2419" started-at="2022-09-21T12:33:12Z" data-provider="getData" depends-on-methods="apoorvrastogitraining.tests.SubmitOrderTest.submitOrder" finished-at="2022-09-21T12:33:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=India123, product=iphone 13 pro, email=rastogiapoorv1@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderHistoryTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:apoorvrastogitraining.tests.SubmitOrderTest@7c16905e]" name="tearDown" is-config="true" duration-ms="1240" started-at="2022-09-21T12:33:15Z" finished-at="2022-09-21T12:33:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- apoorvrastogitraining.tests.SubmitOrderTest -->
      <class name="apoorvrastogitraining.tests.ErrorValidationTest">
        <test-method status="PASS" signature="launchApplication()[pri:0, instance:apoorvrastogitraining.tests.ErrorValidationTest@1753acfe]" name="launchApplication" is-config="true" duration-ms="15835" started-at="2022-09-21T12:31:46Z" finished-at="2022-09-21T12:32:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method status="SKIP" signature="loginErrorValidation()[pri:0, instance:apoorvrastogitraining.tests.ErrorValidationTest@1753acfe]" name="loginErrorValidation" duration-ms="1975" started-at="2022-09-21T12:32:02Z" finished-at="2022-09-21T12:32:04Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email password.]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at apoorvrastogitraining.tests.ErrorValidationTest.loginErrorValidation(ErrorValidationTest.java:20)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:apoorvrastogitraining.tests.ErrorValidationTest@1753acfe]" name="tearDown" is-config="true" duration-ms="1212" started-at="2022-09-21T12:32:04Z" finished-at="2022-09-21T12:32:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="launchApplication()[pri:0, instance:apoorvrastogitraining.tests.ErrorValidationTest@1753acfe]" name="launchApplication" is-config="true" duration-ms="6734" started-at="2022-09-21T12:32:05Z" finished-at="2022-09-21T12:32:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method status="FAIL" signature="loginErrorValidation()[pri:0, instance:apoorvrastogitraining.tests.ErrorValidationTest@1753acfe]" name="loginErrorValidation" duration-ms="1768" started-at="2022-09-21T12:32:11Z" finished-at="2022-09-21T12:32:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email password.]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at apoorvrastogitraining.tests.ErrorValidationTest.loginErrorValidation(ErrorValidationTest.java:20)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:apoorvrastogitraining.tests.ErrorValidationTest@1753acfe]" name="tearDown" is-config="true" duration-ms="1054" started-at="2022-09-21T12:32:13Z" finished-at="2022-09-21T12:32:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="launchApplication()[pri:0, instance:apoorvrastogitraining.tests.ErrorValidationTest@1753acfe]" name="launchApplication" is-config="true" duration-ms="6030" started-at="2022-09-21T12:32:14Z" finished-at="2022-09-21T12:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method status="PASS" signature="productErrorValidation()[pri:0, instance:apoorvrastogitraining.tests.ErrorValidationTest@1753acfe]" name="productErrorValidation" duration-ms="4815" started-at="2022-09-21T12:32:20Z" finished-at="2022-09-21T12:32:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productErrorValidation -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:apoorvrastogitraining.tests.ErrorValidationTest@1753acfe]" name="tearDown" is-config="true" duration-ms="1182" started-at="2022-09-21T12:32:25Z" finished-at="2022-09-21T12:32:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- apoorvrastogitraining.tests.ErrorValidationTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
